{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","console","log","className","src","alt","GifGrid","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAgBrC,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAM,OAAIP,GAAJ,mBAAkBO,OACtCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCShBG,EAhBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAENC,EAFM,iDAE0CC,UAAUH,GAFpD,+DAGOI,MAAMF,GAHb,cAGNG,EAHM,gBAIWA,EAAKC,OAJhB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV9B,kBAaLM,GAbK,4CAAH,sDCuBEO,EApBM,SAACf,GAAc,IAAD,EACLd,mBAAS,CAC/BqB,KAAM,GACNS,SAAS,IAHkB,mBACxBC,EADwB,KACjBC,EADiB,KAiB/B,OAXAC,qBAAU,WACNpB,EAAQC,GACHoB,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGtB,CAAChB,IAGGiB,GClBEK,EAAc,SAAC,GAAiB,IAAhBV,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OADAqB,QAAQC,IAAIZ,EAAMV,GAEd,yBAAKuB,UAAU,0CACX,yBAAKC,IAAKxB,EAAKyB,IAAKf,IACpB,2BAAIA,KCcDgB,EAjBC,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SAAe,EAEIe,EAAaf,GAAjCa,EAFgB,EAEtBN,KAAcS,EAFQ,EAERA,QACtB,OACI,oCACI,wBAAIS,UAAU,yCAAyCzB,GACtDgB,GAAW,uBAAGS,UAAU,oCAAb,YACZ,yBAAKA,UAAU,aACVZ,EAAOJ,KAAI,SAAAC,GAAG,OACX,kBAAC,EAAD,eACImB,IAAKnB,EAAIC,IACLD,UCoBboB,EA5BM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,cAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KASvB,OACI,oCAEI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ8C,EAAWtB,KAAI,SAAAT,GAAQ,OACxB,kBAAC,EAAD,CACA6B,IAAK7B,EACLA,SAAUA,U,MCrB7BgC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.610a5f64.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories(categs =>[inputValue,...categs]);\n            setInputValue('');\n        }\n        \n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type='text'\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategories: PropTypes.func.isRequired\n};\n\nexport default AddCategory;\n","const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=P4OuJQIs54EFSC4bgyTWRYxGUqkYT2Rc`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    return gifs;\n}\n\nexport default getGifs;","import { useEffect, useState } from 'react';\nimport getGifs from '../helpers/getGifs';\n\nconst useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n    }, [category])\n\n\n    return state;\n}\n\nexport default useFetchGifs;","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    console.log(title,url);\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport useFetchGifs from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n    return (\n        <>\n            <h3 className=\"animate__animated animate__backInDown\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\n            <div className=\"card-grid\">\n                {images.map(img =>\n                    <GifGridItem\n                        key={img.id}\n                        {...img} />\n                )}\n            </div>\n        </>\n    )\n}\nexport default GifGrid;\n","import React, {useState} from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n\n\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n    \n    // const handleAdd =()=>{\n    //     setCategories(['Caballeroes Zodiaco',...categories]);\n    //     setCategories(cat =>{ 'Caballeroes Zodiaco', ...cats})\n    // }\n\n    return (\n        <>\n\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n            <ol>\n                {\n                    categories.map(category => \n                   <GifGrid \n                   key={category}\n                   category={category}/>\n                    )\n                }\n            </ol>\n        </>\n    );\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}